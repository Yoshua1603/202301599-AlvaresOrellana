import EDL.*;

/**
 * Ejercicio2.
 * 
 * @author (Alvares Orellana Samuel Yhosua) 
 * @version (17/06/2024)
 */
public class Swap extends ListaCDE<Integer>
{

    public void swap(int indice, int indice2){

        //Controlamos que la lista tenga mas de 1 de un elemento
        if(size() <= 1){
            System.out.println("Imposible, nada que intercambiar");
        } else {
            //Controlamos que los indices sean posibles y prÃ¡cticos si es asi, realizamos el intercambio
            if(indice >= 0 && indice2 >= 0 && indice != indice2){
                NodoDE<Integer> aux = getIni();

                for(int i = 0; i <= indice; i++){
                    aux = aux.getSig();
                }

                NodoDE<Integer> aux2 = getIni();

                for(int j = 0; j <= indice2; j++){
                    aux2 = aux2.getSig();
                }

                //revisamos si no apuntamos al mismo nodo

                if(!aux.equals(aux2) && aux != aux2){
                    Integer datoAux = aux.getDato();
                    aux.setDato(aux2.getDato());
                    aux2.setDato(datoAux); 
                } else {
                    System.out.println("Intercambio innecesario");
                }

            } else {
                System.out.println("Indice imposible");
            }
        }
    }

    public String[] print(){
        //Controlamos que la lista no este vacia
        if(size() < 1){
            System.out.println("Lista vacia");
            return null;
        } else {
            String[] res = new String[size()];
            NodoDE<Integer> aux = getIni();
            for(int i = 0; i < size(); i++){
                //Para que no nos imprima la direccion de memoria por si acaso usamos el toString
                res[i] = aux.getDato().toString();
            }
            return res;
        }

    }
    
}
